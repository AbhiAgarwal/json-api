// Generated by LiveScript 1.2.0
(function(){
  var Resource, Collection, Document;
  Resource = require('./Resource');
  Collection = require('./Collection');
  Document = (function(){
    Document.displayName = 'Document';
    var prototype = Document.prototype, constructor = Document;
    function Document(resources, meta){
      this.resources = resources;
      this.meta = meta;
    }
    prototype.renderResource = function(resource){
      var res;
      res = resource.attrs;
      if (resource.id) {
        res.id = resource.id;
      }
      return res;
    };
    prototype.get = function(){
      var doc;
      doc = {};
      doc[this.resources.type] = this.resources instanceof Collection
        ? this.resources.resources.map(bind$(this, 'renderResource'))
        : this.renderResource(this.resources);
      if (this.meta) {
        doc.meta = this.meta;
      }
      return doc;
    };
    return Document;
  }());
  module.exports = Document;
  function bind$(obj, key, target){
    return function(){ return (target || obj)[key].apply(obj, arguments) };
  }
}).call(this);
