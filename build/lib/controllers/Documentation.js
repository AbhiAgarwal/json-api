// Generated by LiveScript 1.2.0
(function(){
  var Q, templating, jade, path, DocumentationController;
  Q = require('q');
  templating = require('url-template');
  jade = require('jade');
  path = require('path');
  DocumentationController = (function(){
    DocumentationController.displayName = 'DocumentationController';
    var prototype = DocumentationController.prototype, constructor = DocumentationController;
    function DocumentationController(registry, apiInfo, templatePath){
      this.registry = registry;
      this.apiInfo = apiInfo;
      this.template = templatePath || path.resolve(__dirname, '../../../templates/documentation.jade');
    }
    prototype.index = function(req, res){
      var _getModelInfo, data, i$, ref$, len$, type, this$ = this;
      _getModelInfo = function(type){
        var adapter, modelName, inflector;
        adapter = this$.registry.adapter(type);
        modelName = adapter.constructor.getModelName(type);
        inflector = adapter.inflector;
        return {
          name: modelName,
          schema: adapter.constructor.getStandardizedSchema(adapter.getModel(modelName))
        };
      };
      data = this.apiInfo;
      data.resourcesMap = {};
      for (i$ = 0, len$ = (ref$ = this.registry.types()).length; i$ < len$; ++i$) {
        type = ref$[i$];
        data.resourcesMap[type] = _getModelInfo(type);
      }
      return res.send(jade.renderFile(this.template, data));
    };
    return DocumentationController;
  }());
  module.exports = DocumentationController;
}).call(this);
