// Generated by LiveScript 1.2.0
(function(){
  var Q, mongoose;
  Q = require('Q');
  mongoose = require('mongoose');
  module.exports = {
    /**
     * Returns an object with newProps as properties (all enumerable) 
     * and values and `this` in the prototype chain. Allows you create
     * controllers that extend this one.
     */
    extend: function(newProps){
      var k, v;
      return Object.create(this, (function(){
        var ref$, own$ = {}.hasOwnProperty, results$ = {};
        for (k in ref$ = newProps) if (own$.call(ref$, k)) {
          v = ref$[k];
          results$[k] = {
            value: v,
            enumerable: true
          };
        }
        return results$;
      }()));
    }
    /**
     * An object that implements the Adapter interface. 
     * Should be provided by the child controller.
     */,
    adapter: null,
    _buildGETQuery: function(req){
      var query;
      query = adapter.query();
      if (req.params.id) {
        query.withIds(req.params.id.split(","));
      }
      return query;
    },
    list: function(req, res, next){
      return this._buildGETQuery(req).exec().then(res.json);
    }
  };
}).call(this);
