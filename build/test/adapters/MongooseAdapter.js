// Generated by LiveScript 1.2.0
(function(){
  var mocha, sinon, chai, Resource, MongooseAdapter, expect, it2;
  mocha = require('mocha');
  sinon = require('sinon');
  chai = require('chai');
  Resource = require('../../lib/types/Resource');
  MongooseAdapter = require('../../lib/adapters/MongooseAdapter');
  expect = chai.expect;
  it2 = it;
  describe("Mongoose Adapter", function(){
    return describe("docToResource", function(){
      return it2("should remove _id,  __v; use id as the id; and call toObject", function(){
        var type, doc, resource;
        type = "myType";
        doc = {
          id: 'blah2',
          prop: 'val',
          _id: 'blah',
          __v: 'blah3',
          toObject: sinon.spy(function(){
            return {
              _id: this._id,
              __v: this.__v,
              prop: 'valToObject'
            };
          })
        };
        resource = MongooseAdapter.docToResource(doc, type);
        expect(MongooseAdapter.docToResource).to.be.a("function");
        expect(doc.toObject.callCount).to.equal(1);
        expect(resource.attrs.prop).to.equal("valToObject");
        expect(resource.attrs._id).to.be.undefined;
        expect(resource.attrs.__v).to.be.undefined;
        return expect(resource.id).to.equal('blah2');
      });
    });
  });
}).call(this);
