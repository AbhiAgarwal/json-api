// Generated by LiveScript 1.2.0
(function(){
  var mocha, sinon, chai, BaseController, expect, it2;
  mocha = require('mocha');
  sinon = require('sinon');
  chai = require('chai');
  BaseController = require('../lib/BaseController');
  expect = chai.expect;
  it2 = it;
  describe("Base Controller", function(){
    return describe("extends", function(){
      return it2("returns a new object the provided properties and `this` as the prototype", function(){
        var orig, new1, new2;
        orig = {
          'base': function(it){
            return it;
          }
        };
        new1 = BaseController.extend.call(orig, {
          'my2': function(it){
            return it;
          }
        });
        new2 = BaseController.extend({
          'my3': true
        });
        expect(new1.__proto__ === orig).to.be['true'];
        expect(new1.my2).to.be.a('function');
        expect(new2.__proto__ === BaseController).to.be['true'];
        return expect(new2.my3).to.be['true'];
      });
    });
  });
}).call(this);
